"""Initial migration: PII detection and similarity analysis system

Revision ID: 62e5433b8c99
Revises: 
Create Date: 2025-08-20 21:12:55.837888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '62e5433b8c99'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('input_text', sa.Text(), nullable=False, comment='분석 대상 텍스트'),
    sa.Column('input_hash', sa.String(length=64), nullable=True, comment='중복 분석 방지용 해시'),
    sa.Column('blocked', sa.Boolean(), nullable=False, comment='차단 여부'),
    sa.Column('block_reasons', postgresql.ARRAY(sa.String()), nullable=False, comment='차단 사유들'),
    sa.Column('pii_detected', sa.Boolean(), nullable=False, comment='PII 탐지 여부'),
    sa.Column('pii_entities', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='탐지된 PII 엔티티들'),
    sa.Column('similarity_detected', sa.Boolean(), nullable=False, comment='유사도 탐지 여부'),
    sa.Column('max_similarity', sa.DECIMAL(precision=5, scale=4), nullable=True, comment='최대 유사도'),
    sa.Column('matched_documents', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='매칭된 문서들'),
    sa.Column('user_ip', sa.String(length=45), nullable=True, comment='사용자 IP'),
    sa.Column('analysis_time_ms', sa.Integer(), nullable=True, comment='분석 소요 시간 (ms)'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pii_detections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_ip', postgresql.INET(), nullable=True),
    sa.Column('has_pii', sa.Boolean(), nullable=False),
    sa.Column('original_text', sa.Text(), nullable=False),
    sa.Column('tagged_text', sa.Text(), nullable=True),
    sa.Column('entities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensitive_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False, comment='문서 제목'),
    sa.Column('file_path', sa.String(length=1000), nullable=False, comment='파일 저장 경로'),
    sa.Column('file_size', sa.Integer(), nullable=True, comment='파일 크기 (bytes)'),
    sa.Column('content_hash', sa.String(length=64), nullable=True, comment='파일 내용 해시'),
    sa.Column('chunk_count', sa.Integer(), nullable=False, comment='청크 개수'),
    sa.Column('embedding_status', sa.String(length=20), nullable=False, comment='임베딩 처리 상태: pending, processing, completed, failed'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_config',
    sa.Column('id', sa.Integer(), nullable=False, comment='항상 1 (단일 레코드)'),
    sa.Column('similarity_threshold', sa.DECIMAL(precision=3, scale=2), nullable=False, comment='유사도 임계값'),
    sa.Column('pii_threshold', sa.DECIMAL(precision=3, scale=2), nullable=False, comment='PII 탐지 임계값'),
    sa.Column('auto_block_pii', sa.Boolean(), nullable=False, comment='PII 자동 차단 활성화'),
    sa.Column('auto_block_similarity', sa.Boolean(), nullable=False, comment='유사도 자동 차단 활성화'),
    sa.Column('max_file_size_mb', sa.Integer(), nullable=False, comment='최대 업로드 파일 크기 (MB)'),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False, comment='기타 설정들'),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_chunks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False, comment='소속 문서 ID'),
    sa.Column('chunk_index', sa.Integer(), nullable=False, comment='청크 순서'),
    sa.Column('content', sa.Text(), nullable=False, comment='청크 텍스트 내용'),
    sa.Column('embedding_id', sa.String(length=255), nullable=True, comment='ChromaDB 벡터 ID'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['sensitive_documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_chunks')
    op.drop_table('system_config')
    op.drop_table('sensitive_documents')
    op.drop_table('pii_detections')
    op.drop_table('analysis_logs')
    # ### end Alembic commands ###
